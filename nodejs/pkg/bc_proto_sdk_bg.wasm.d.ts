/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const init_logging: (a: number, b: number) => void;
export const __wbg_messageparser_free: (a: number, b: number) => void;
export const messageparser_new: (a: number, b: number, c: number) => number;
export const messageparser_receive_data: (a: number, b: number, c: number) => void;
export const messageparser_next_message: (a: number) => number;
export const messageparser_start_message_stream: (a: number) => number;
export const get_device_info: () => number;
export const start_eeg_stream: () => number;
export const stop_eeg_stream: () => number;
export const get_eeg_data_buffer: (a: number, b: number) => number;
export const get_imu_data_buffer: (a: number, b: number) => number;
export const get_eeg_config: () => number;
export const set_eeg_config: (a: number, b: number, c: number) => number;
export const start_imu_stream: () => number;
export const stop_imu_stream: () => number;
export const get_imu_config: () => number;
export const set_imu_config: (a: number) => number;
export const set_env_noise_filter_cfg: (a: number, b: number) => void;
export const remove_env_noise: (a: number, b: number, c: number) => void;
export const set_eeg_filter_cfg: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => void;
export const apply_eeg_filters: (a: number, b: number, c: number) => void;
export const apply_highpass_filter: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const apply_bandpass_filter: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const apply_bandstop_filter: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const set_resp_callback: (a: number) => void;
export const apply_lowpass_filter: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const __wbg_starkota_free: (a: number, b: number) => void;
export const __wbg_get_starkota_dfu_state: (a: number) => number;
export const __wbg_set_starkota_dfu_state: (a: number, b: number) => void;
export const starkota_new: () => number;
export const starkota_get_dfu_state: (a: number) => number;
export const starkota_is_dfu_available: (a: number) => number;
export const starkota_set_dfu_file_path: (a: number, b: number, c: number) => void;
export const starkota_start_dfu_mode_check: (a: number) => void;
export const starkota_stop_check_dfu_mode: (a: number) => void;
export const starkota_set_dfu_state_callback: (a: number, b: number) => void;
export const starkota_set_dfu_progress_callback: (a: number, b: number) => void;
export const starkota_trigger_dfu_state: (a: number, b: number) => number;
export const starkota_trigger_dfu_progress: (a: number, b: number) => number;
export const clear_imu_buffer: () => void;
export const set_eeg_buffer_cfg: (a: number) => void;
export const set_imu_buffer_cfg: (a: number) => void;
export const clear_eeg_buffer: () => void;
export const set_web_callback: (a: number) => void;
export const __wbg_starksdk_free: (a: number, b: number) => void;
export const starksdk_init: (a: number, b: number, c: number) => void;
export const starksdk_get_sdk_version: (a: number) => void;
export const starksdk_did_receive_data: (a: number, b: number, c: number) => void;
export const starksdk_get_device_info: (a: number) => number;
export const starksdk_get_device_sn: (a: number) => number;
export const starksdk_get_device_fw_version: (a: number) => number;
export const starksdk_get_sku_type: (a: number) => number;
export const starksdk_get_serial_port_cfg: (a: number) => number;
export const starksdk_get_serial_baudrate: (a: number) => number;
export const starksdk_get_force_level: (a: number) => number;
export const starksdk_get_voltage: (a: number) => number;
export const starksdk_get_auto_calibration_enabled: (a: number) => number;
export const starksdk_get_turbo_mode_enabled: (a: number) => number;
export const starksdk_get_turbo_config: (a: number) => number;
export const starksdk_get_led_info: (a: number) => number;
export const starksdk_get_button_event: (a: number) => number;
export const starksdk_get_motor_state: (a: number) => number;
export const starksdk_get_finger_positions: (a: number) => number;
export const starksdk_get_finger_speeds: (a: number) => number;
export const starksdk_get_finger_currents: (a: number) => number;
export const starksdk_get_action_sequence: (a: number, b: number) => number;
export const starksdk_set_action_cmd: (a: number, b: number, c: number) => number;
export const starksdk_save_action_sequence: (a: number, b: number) => number;
export const starksdk_run_action_sequence: (a: number, b: number) => number;
export const starksdk_transfer_action_sequence: (a: number, b: number, c: number) => number;
export const starksdk_reboot: (a: number) => number;
export const starksdk_set_serialport_baudrate: (a: number, b: number) => number;
export const starksdk_set_serialport_device_id: (a: number, b: number) => number;
export const starksdk_set_force_level: (a: number, b: number) => number;
export const starksdk_set_position_auto_calibration: (a: number, b: number) => number;
export const starksdk_set_position_calibration: (a: number) => number;
export const starksdk_set_turbo_mode_enabled: (a: number, b: number) => number;
export const starksdk_set_turbo_config: (a: number, b: number) => number;
export const starksdk_set_led_info: (a: number, b: number) => number;
export const starksdk_set_finger_position: (a: number, b: number) => number;
export const starksdk_set_finger_positions: (a: number, b: number, c: number) => number;
export const starksdk_set_finger_speed: (a: number, b: number) => number;
export const starksdk_set_finger_speeds: (a: number, b: number, c: number) => number;
export const starksdk_factory_set_key: (a: number, b: number, c: number) => number;
export const starksdk_factory_set_device_sn: (a: number, b: number, c: number) => number;
export const starksdk_factory_set_sku_type: (a: number, b: number) => number;
export const starksdk_factory_set_stall_durations: (a: number, b: number, c: number) => number;
export const starksdk_factory_set_stall_currents: (a: number, b: number, c: number, d: number) => number;
export const starksdk_factory_set_finger_pwms: (a: number, b: number, c: number, d: number) => number;
export const starksdk_factory_get_stall_durations: (a: number) => number;
export const starksdk_factory_get_stall_currents: (a: number, b: number) => number;
export const starksdk_factory_get_finger_pwms: (a: number, b: number) => number;
export const __wbg_get_serialportcfg_slave_id: (a: number) => number;
export const __wbg_set_serialportcfg_slave_id: (a: number, b: number) => void;
export const __wbg_get_serialportcfg_baudrate: (a: number) => number;
export const __wbg_set_serialportcfg_baudrate: (a: number, b: number) => void;
export const serialportcfg_new: (a: number, b: number) => number;
export const serialportcfg_description: (a: number, b: number) => void;
export const __wbg_deviceinfo_free: (a: number, b: number) => void;
export const __wbg_get_deviceinfo_sku_type: (a: number) => number;
export const __wbg_set_deviceinfo_sku_type: (a: number, b: number) => void;
export const __wbg_get_deviceinfo_serial_number: (a: number, b: number) => void;
export const __wbg_set_deviceinfo_serial_number: (a: number, b: number, c: number) => void;
export const __wbg_get_deviceinfo_firmware_version: (a: number, b: number) => void;
export const __wbg_set_deviceinfo_firmware_version: (a: number, b: number, c: number) => void;
export const deviceinfo_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const deviceinfo_desc: (a: number, b: number) => void;
export const __wbg_motorstatusdata_free: (a: number, b: number) => void;
export const __wbg_get_motorstatusdata_positions: (a: number, b: number) => void;
export const __wbg_get_motorstatusdata_speeds: (a: number, b: number) => void;
export const __wbg_get_motorstatusdata_states: (a: number, b: number) => void;
export const __wbg_set_motorstatusdata_states: (a: number, b: number, c: number) => void;
export const motorstatusdata_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const motorstatusdata_is_idle: (a: number) => number;
export const motorstatusdata_is_opened: (a: number) => number;
export const motorstatusdata_is_closed: (a: number) => number;
export const motorstatusdata_desc: (a: number, b: number) => void;
export const __wbg_touchsensorstatus_free: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_normal_force1: (a: number) => number;
export const __wbg_set_touchsensorstatus_normal_force1: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_normal_force2: (a: number) => number;
export const __wbg_set_touchsensorstatus_normal_force2: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_normal_force3: (a: number) => number;
export const __wbg_set_touchsensorstatus_normal_force3: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_force1: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_force1: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_force2: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_force2: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_force3: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_force3: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_direction1: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_direction1: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_direction2: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_direction2: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_tangential_direction3: (a: number) => number;
export const __wbg_set_touchsensorstatus_tangential_direction3: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_mutual_close: (a: number) => number;
export const __wbg_set_touchsensorstatus_mutual_close: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_status: (a: number) => number;
export const __wbg_set_touchsensorstatus_status: (a: number, b: number) => void;
export const touchsensorstatus_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number) => number;
export const touchsensorstatus_normal_force1: (a: number) => number;
export const touchsensorstatus_normal_force2: (a: number) => number;
export const touchsensorstatus_normal_force3: (a: number) => number;
export const touchsensorstatus_tangential_force1: (a: number) => number;
export const touchsensorstatus_tangential_force2: (a: number) => number;
export const touchsensorstatus_tangential_force3: (a: number) => number;
export const touchsensorstatus_tangential_direction1: (a: number) => number;
export const touchsensorstatus_tangential_direction2: (a: number) => number;
export const touchsensorstatus_tangential_direction3: (a: number) => number;
export const touchsensorstatus_self_close1: (a: number) => number;
export const touchsensorstatus_self_close2: (a: number) => number;
export const touchsensorstatus_mutual_close: (a: number) => number;
export const touchsensorstatus_status: (a: number) => number;
export const touchsensorstatus_is_normal: (a: number) => number;
export const touchsensorstatus_is_abnormal: (a: number) => number;
export const touchsensorstatus_description: (a: number, b: number) => void;
export const __wbg_ledinfo_free: (a: number, b: number) => void;
export const __wbg_get_ledinfo_color: (a: number) => number;
export const __wbg_set_ledinfo_color: (a: number, b: number) => void;
export const __wbg_get_ledinfo_mode: (a: number) => number;
export const __wbg_set_ledinfo_mode: (a: number, b: number) => void;
export const ledinfo_new: (a: number, b: number) => number;
export const ledinfo_description: (a: number, b: number) => void;
export const __wbg_buttonpressevent_free: (a: number, b: number) => void;
export const __wbg_get_buttonpressevent_timestamp: (a: number) => number;
export const __wbg_set_buttonpressevent_timestamp: (a: number, b: number) => void;
export const __wbg_get_buttonpressevent_button_id: (a: number) => number;
export const __wbg_set_buttonpressevent_button_id: (a: number, b: number) => void;
export const __wbg_get_buttonpressevent_press_state: (a: number) => number;
export const __wbg_set_buttonpressevent_press_state: (a: number, b: number) => void;
export const buttonpressevent_new: (a: number, b: number, c: number) => number;
export const buttonpressevent_description: (a: number, b: number) => void;
export const __wbg_actionsequenceitem_free: (a: number, b: number) => void;
export const __wbg_get_actionsequenceitem_index: (a: number) => number;
export const __wbg_set_actionsequenceitem_index: (a: number, b: number) => void;
export const __wbg_get_actionsequenceitem_duration: (a: number) => number;
export const __wbg_set_actionsequenceitem_duration: (a: number, b: number) => void;
export const __wbg_get_actionsequenceitem_positions: (a: number, b: number) => void;
export const __wbg_set_actionsequenceitem_positions: (a: number, b: number, c: number) => void;
export const __wbg_get_actionsequenceitem_speeds: (a: number, b: number) => void;
export const __wbg_set_actionsequenceitem_speeds: (a: number, b: number, c: number) => void;
export const __wbg_get_actionsequenceitem_strengths: (a: number, b: number) => void;
export const __wbg_set_actionsequenceitem_strengths: (a: number, b: number, c: number) => void;
export const actionsequenceitem_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const actionsequenceitem_desc: (a: number, b: number) => void;
export const __wbg_actionsequence_free: (a: number, b: number) => void;
export const __wbg_get_actionsequence_action_id: (a: number) => number;
export const __wbg_set_actionsequence_action_id: (a: number, b: number) => void;
export const __wbg_get_actionsequence_data: (a: number, b: number) => void;
export const __wbg_set_actionsequence_data: (a: number, b: number, c: number) => void;
export const actionsequence_new: (a: number, b: number, c: number) => number;
export const actionsequence_description: (a: number, b: number) => void;
export const __wbg_get_turboconfig_interval: (a: number) => number;
export const __wbg_set_turboconfig_interval: (a: number, b: number) => void;
export const __wbg_get_turboconfig_duration: (a: number) => number;
export const __wbg_set_turboconfig_duration: (a: number, b: number) => void;
export const turboconfig_new: (a: number, b: number) => number;
export const turboconfig_interval: (a: number) => number;
export const turboconfig_duration: (a: number) => number;
export const turboconfig_description: (a: number, b: number) => void;
export const __wbg_get_touchsensorstatus_self_close1: (a: number) => number;
export const __wbg_get_touchsensorstatus_self_close2: (a: number) => number;
export const __wbg_set_motorstatusdata_positions: (a: number, b: number, c: number) => void;
export const __wbg_set_motorstatusdata_speeds: (a: number, b: number, c: number) => void;
export const actionsequenceitem_description: (a: number, b: number) => void;
export const motorstatusdata_description: (a: number, b: number) => void;
export const deviceinfo_description: (a: number, b: number) => void;
export const __wbg_serialportcfg_free: (a: number, b: number) => void;
export const __wbg_turboconfig_free: (a: number, b: number) => void;
export const __wbg_set_touchsensorstatus_self_close1: (a: number, b: number) => void;
export const __wbg_set_touchsensorstatus_self_close2: (a: number, b: number) => void;
export const parse_eeg_data: (a: number, b: number, c: number, d: number) => void;
export const __wbindgen_export_0: (a: number) => void;
export const __wbindgen_export_1: (a: number, b: number, c: number) => void;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: (a: number, b: number) => number;
export const __wbindgen_export_4: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_5: (a: number, b: number) => void;
export const __wbindgen_export_6: (a: number, b: number, c: number) => void;
export const __wbindgen_export_7: (a: number, b: number, c: number, d: number) => void;
